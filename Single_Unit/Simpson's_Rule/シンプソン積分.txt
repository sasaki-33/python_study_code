（目次）
一章：問題の定式化
二章：問題解決方法
三章：プログラム設計
四章：実行結果


(例題) 【被積分関数】√(1-ⅹ＾２)
　　 【積分区間】0～1
　　　上記の条件でシンプソン積分を用いて、有効桁数9桁の積分値を求める。


(一章)　問題の定式化
　　　　　
　　　　①積分区間の分割数を変化させる。
　　　　②シンプソン積分を行う。
　　　　③有効桁数9桁の確保。


(二章)　問題解決方法とプログラム設計
        
        2.1問題解決方法とアルゴリズム
　　　　　
　　　　　「問題解決方法」

　　　　　（１）積分対象となる関数の曲線をいくつかの区間に区切って放物線で近似する。
　　　　　　　　積分区間のa～bを２ｎ等分し、ｈ=（ｂーa）/２ｎとし、a,a+h,a+2h,...bに相当するf(ⅹ）の値を
　　　　　　　　y0,y1,y2...とした時、積分の近似値Ａは次の式で求められる。

        　　　　       n-1
　　　　　　　　　A=h/3Σ (y2i+4y2i+1+y2i+2)
               　　　　i=0

　　　　　（２）分割数Nの初期値を２とし、２ずつ増加させる。
　　　　　（３）分割数Nの時の積分の近似値をAｎとしたとき、分割数がN+1の時の積分の近似値An+1とする。
　　　　　（４）それぞれの近似値AnとAn+1を、10の9乗を行い小数点を切り捨てた結果が一致すれば終了。


　　　　　「アルゴリズム」

　　　　　（１）分割数を表す二つの変数ＮｘとＮｙを用意し、それぞれに初期値２と４を設定する。
　　　　　（２）分割数がＮｘの時の積分の近似値をAｘに設定する。
　　　　　（３）分割数がＮｙの時の積分の近似値をAｙに設定する。
　　　　　（４）NｘにNｙを設定する。
　　　　　（５）NｙにNｙ＋２を設定する。
　　　　　（６）AｘとAｙに10の9乗を行う。
　　　　　（７）二つの数の小数点以下を切り捨て。
　　　　　（８）二つの数を比較し、一致するまで、（２）～（８）を繰り返す。
　　　　　（９）一致すれば、10の9乗で割り題意の有効桁数９桁の積分値とする。


(三章)　　プログラム設計

　　　　　「演算の設計」

　　　　　（１）モジュールはmathモジュールを使用する。
　　　　　（２）使用する変数は分割数を表すNx,Nyを使用する。
　　　　　（３）関数simpsonを作成し、引数を分割数とし、返却値は近似値を10^9し小数点を切り捨てた値とする。
　　　　　（４）Whille文を用いて、分割数がNxとNyの時の関数simpsonの返却値が一致するまで繰り返す。
　　　　　（５）最終的な分割数と積分値を出力する。


(四章)　　実行結果
　　　　　
　　　　　「実行結果」
　　　　　　最終的な分割数は1746、積分値は0.785397607となった。
            